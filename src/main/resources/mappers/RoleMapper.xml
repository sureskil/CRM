<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.po.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_remark" jdbcType="VARCHAR" property="roleRemark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_remark, create_date, update_date, is_valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xxxx.crm.po.Role" useGeneratedKeys="true">
    insert into t_role (role_name, role_remark, create_date, 
      update_date, is_valid)
    values (#{roleName,jdbcType=VARCHAR}, #{roleRemark,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{isValid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xxxx.crm.po.Role" useGeneratedKeys="true">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleRemark != null">
        role_remark,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.po.Role">
    update t_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        role_remark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.po.Role">
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_remark = #{roleRemark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 多条件查询 -->
  <select id="queryRoleBatch" resultType="com.xxxx.crm.po.Role">
    select <include refid="Base_Column_List" /> from t_role

    <where>
        is_valid = 1
      <if test="roleName != null and roleName != '' ">
        and role_name = #{roleName}
      </if>
    </where>
  </select>

  <!-- 通过角色名查询角色 -->
  <select id="queryRoleByRoleName" resultType="Integer">
    select count(1) from t_role where role_name = #{roleName}
  </select>

  <!-- 查询所有的用户id与name -->
  <select id="selectRoleIdAndName" resultType="com.xxxx.crm.model.RoleModel">
    select id, role_name from t_role where is_valid = 1
  </select>


  <select id="selectRn" resultType="java.util.Map">
    select id, role_name as roleName from t_role where is_valid = 1
  </select>

  <!-- 通过userId查询对应RoleId的集合 -->
  <select id="selectRoleId" resultType="java.lang.Integer">
    select role_id from t_user_role where user_id = #{userId}
  </select>


</mapper>